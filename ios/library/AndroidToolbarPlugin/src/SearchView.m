//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidToolBar\src\main\java\androidx\appcompat\widget\SearchView.java
//

#include "AutoCompleteTextView.h"
#include "Context.h"
#include "Drawable.h"
#include "Editable.h"
#include "IWidget.h"
#include "ImageView.h"
#include "J2ObjC_source.h"
#include "KeyEvent.h"
#include "LinearLayoutCompat.h"
#include "PluginInvoker.h"
#include "SearchView.h"
#include "TextUtils.h"
#include "TextWatcher.h"
#include "View.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Math.h"

@protocol JavaLangCharSequence;


@interface ADXSearchView () {
 @public
  ADView *mSearchEditFrame_;
  ADView *mSubmitArea_;
  ADImageView *mCollapsedIcon_;
  ADDrawable *mSearchHintIcon_;
  jint mSuggestionRowLayout_;
  jint mSuggestionCommitIconResId_;
  id<JavaLangCharSequence> mDefaultQueryHint_;
  id<ADXSearchView_OnQueryTextListener> mOnQueryChangeListener_;
  id<ADXSearchView_OnCloseListener> mOnCloseListener_;
  id<ADView_OnClickListener> mOnSearchClickListener_;
  jboolean mIconifiedByDefault_;
  jboolean mIconified_;
  jboolean mSubmitButtonEnabled_;
  id<JavaLangCharSequence> mQueryHint_;
  jboolean mQueryRefinement_;
  jboolean mClearingFocus_;
  jint mMaxWidth_;
  jboolean mVoiceButtonEnabled_;
  id<JavaLangCharSequence> mOldQueryText_;
  id<JavaLangCharSequence> mUserQuery_;
  jboolean mExpandedInActionView_;
  jint mCollapsedImeOptions_;
}

- (void)updateViewsVisibilityWithBoolean:(jboolean)collapsed;

- (jboolean)isSubmitAreaEnabled;

- (void)updateSubmitButtonWithBoolean:(jboolean)hasText;

- (void)updateSubmitArea;

- (void)updateQueryHint;

- (void)updateVoiceButtonWithBoolean:(jboolean)empty;

- (void)dismissSuggestions;

- (void)setQueryWithJavaLangCharSequence:(id<JavaLangCharSequence>)query;

- (void)updateCloseButton;

@end

J2OBJC_FIELD_SETTER(ADXSearchView, mSearchEditFrame_, ADView *)
J2OBJC_FIELD_SETTER(ADXSearchView, mSubmitArea_, ADView *)
J2OBJC_FIELD_SETTER(ADXSearchView, mCollapsedIcon_, ADImageView *)
J2OBJC_FIELD_SETTER(ADXSearchView, mSearchHintIcon_, ADDrawable *)
J2OBJC_FIELD_SETTER(ADXSearchView, mDefaultQueryHint_, id<JavaLangCharSequence>)
J2OBJC_FIELD_SETTER(ADXSearchView, mOnQueryChangeListener_, id<ADXSearchView_OnQueryTextListener>)
J2OBJC_FIELD_SETTER(ADXSearchView, mOnCloseListener_, id<ADXSearchView_OnCloseListener>)
J2OBJC_FIELD_SETTER(ADXSearchView, mOnSearchClickListener_, id<ADView_OnClickListener>)
J2OBJC_FIELD_SETTER(ADXSearchView, mQueryHint_, id<JavaLangCharSequence>)
J2OBJC_FIELD_SETTER(ADXSearchView, mOldQueryText_, id<JavaLangCharSequence>)
J2OBJC_FIELD_SETTER(ADXSearchView, mUserQuery_, id<JavaLangCharSequence>)

__attribute__((unused)) static void ADXSearchView_updateViewsVisibilityWithBoolean_(ADXSearchView *self, jboolean collapsed);

__attribute__((unused)) static jboolean ADXSearchView_isSubmitAreaEnabled(ADXSearchView *self);

__attribute__((unused)) static void ADXSearchView_updateSubmitButtonWithBoolean_(ADXSearchView *self, jboolean hasText);

__attribute__((unused)) static void ADXSearchView_updateSubmitArea(ADXSearchView *self);

__attribute__((unused)) static void ADXSearchView_updateQueryHint(ADXSearchView *self);

__attribute__((unused)) static void ADXSearchView_updateVoiceButtonWithBoolean_(ADXSearchView *self, jboolean empty);

__attribute__((unused)) static void ADXSearchView_dismissSuggestions(ADXSearchView *self);

__attribute__((unused)) static void ADXSearchView_setQueryWithJavaLangCharSequence_(ADXSearchView *self, id<JavaLangCharSequence> query);

__attribute__((unused)) static void ADXSearchView_updateCloseButton(ADXSearchView *self);

@interface ADXSearchView_OnQueryTextListener : NSObject

@end

@interface ADXSearchView_OnCloseListener : NSObject

@end

@interface ADXSearchView_1 : NSObject < ADView_OnClickListener > {
 @public
  ADXSearchView *this$0_;
}

- (instancetype)initWithADXSearchView:(ADXSearchView *)outer$;

- (void)onClickWithADView:(ADView *)v;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSearchView_1)

__attribute__((unused)) static void ADXSearchView_1_initWithADXSearchView_(ADXSearchView_1 *self, ADXSearchView *outer$);

__attribute__((unused)) static ADXSearchView_1 *new_ADXSearchView_1_initWithADXSearchView_(ADXSearchView *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXSearchView_1 *create_ADXSearchView_1_initWithADXSearchView_(ADXSearchView *outer$);

@interface ADXSearchView_2 : NSObject < ADView_OnClickListener > {
 @public
  ADXSearchView *this$0_;
}

- (instancetype)initWithADXSearchView:(ADXSearchView *)outer$;

- (void)onClickWithADView:(ADView *)v;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSearchView_2)

__attribute__((unused)) static void ADXSearchView_2_initWithADXSearchView_(ADXSearchView_2 *self, ADXSearchView *outer$);

__attribute__((unused)) static ADXSearchView_2 *new_ADXSearchView_2_initWithADXSearchView_(ADXSearchView *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXSearchView_2 *create_ADXSearchView_2_initWithADXSearchView_(ADXSearchView *outer$);

@interface ADXSearchView_3 : NSObject < ADView_OnClickListener > {
 @public
  ADXSearchView *this$0_;
}

- (instancetype)initWithADXSearchView:(ADXSearchView *)outer$;

- (void)onClickWithADView:(ADView *)v;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSearchView_3)

__attribute__((unused)) static void ADXSearchView_3_initWithADXSearchView_(ADXSearchView_3 *self, ADXSearchView *outer$);

__attribute__((unused)) static ADXSearchView_3 *new_ADXSearchView_3_initWithADXSearchView_(ADXSearchView *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXSearchView_3 *create_ADXSearchView_3_initWithADXSearchView_(ADXSearchView *outer$);

@interface ADXSearchView_4 : NSObject < ADTextWatcher > {
 @public
  ADXSearchView *this$0_;
}

- (instancetype)initWithADXSearchView:(ADXSearchView *)outer$;

- (void)beforeTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                          withInt:(jint)start
                                          withInt:(jint)count
                                          withInt:(jint)after;

- (void)onTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                      withInt:(jint)start
                                      withInt:(jint)before
                                      withInt:(jint)count;

- (void)afterTextChangedWithADEditable:(id<ADEditable>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSearchView_4)

__attribute__((unused)) static void ADXSearchView_4_initWithADXSearchView_(ADXSearchView_4 *self, ADXSearchView *outer$);

__attribute__((unused)) static ADXSearchView_4 *new_ADXSearchView_4_initWithADXSearchView_(ADXSearchView *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXSearchView_4 *create_ADXSearchView_4_initWithADXSearchView_(ADXSearchView *outer$);

@implementation ADXSearchView

- (void)setOnQueryTextListenerWithADXSearchView_OnQueryTextListener:(id<ADXSearchView_OnQueryTextListener>)listener {
  JreStrongAssign(&mOnQueryChangeListener_, listener);
}

- (void)setQueryWithJavaLangCharSequence:(id<JavaLangCharSequence>)query
                             withBoolean:(jboolean)submit {
  [((ADAutoCompleteTextView *) nil_chk(mSearchSrcTextView_)) setMyAttributeWithNSString:@"text" withId:query];
  if (query != nil) {
    JreStrongAssign(&mUserQuery_, query);
  }
  if (submit && !ADTextUtils_isEmptyWithJavaLangCharSequence_(query)) {
    [self onSubmitQuery];
  }
}

- (id<JavaLangCharSequence>)getQueryHint {
  id<JavaLangCharSequence> hint;
  if (mQueryHint_ != nil) {
    hint = mQueryHint_;
  }
  else if (mSearchable_ != nil && [mSearchable_ getHintId] != 0) {
    hint = [((ADContext *) nil_chk([self getContext])) getTextWithInt:[((ADXSearchView_SearchableInfo *) nil_chk(mSearchable_)) getHintId]];
  }
  else {
    hint = mDefaultQueryHint_;
  }
  return hint;
}

- (void)setIconifiedWithBoolean:(jboolean)iconify {
  if (iconify) {
    [self onCloseClicked];
  }
  else {
    [self onSearchClicked];
  }
}

- (jboolean)isIconified {
  return mIconified_;
}

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec {
  if ([self isIconified]) {
    [super onMeasureWithInt:widthMeasureSpec withInt:heightMeasureSpec];
    return;
  }
  jint widthMode = ADView_MeasureSpec_getModeWithInt_(widthMeasureSpec);
  jint width = ADView_MeasureSpec_getSizeWithInt_(widthMeasureSpec);
  switch (widthMode) {
    case ADView_MeasureSpec_AT_MOST:
    if (mMaxWidth_ > 0) {
      width = JavaLangMath_minWithInt_withInt_(mMaxWidth_, width);
    }
    else {
      width = JavaLangMath_minWithInt_withInt_([self getPreferredWidth], width);
    }
    break;
    case ADView_MeasureSpec_EXACTLY:
    if (mMaxWidth_ > 0) {
      width = JavaLangMath_minWithInt_withInt_(mMaxWidth_, width);
    }
    break;
    case ADView_MeasureSpec_UNSPECIFIED:
    width = mMaxWidth_ > 0 ? mMaxWidth_ : [self getPreferredWidth];
    break;
  }
  widthMode = ADView_MeasureSpec_EXACTLY;
  jint heightMode = ADView_MeasureSpec_getModeWithInt_(heightMeasureSpec);
  jint height = ADView_MeasureSpec_getSizeWithInt_(heightMeasureSpec);
  switch (heightMode) {
    case ADView_MeasureSpec_AT_MOST:
    height = JavaLangMath_minWithInt_withInt_([self getPreferredHeight], height);
    break;
    case ADView_MeasureSpec_UNSPECIFIED:
    height = [self getPreferredHeight];
    break;
  }
  heightMode = ADView_MeasureSpec_EXACTLY;
  [super onMeasureWithInt:ADView_MeasureSpec_makeMeasureSpecWithInt_withInt_(width, widthMode) withInt:ADView_MeasureSpec_makeMeasureSpecWithInt_withInt_(height, heightMode)];
}

- (void)updateViewsVisibilityWithBoolean:(jboolean)collapsed {
  ADXSearchView_updateViewsVisibilityWithBoolean_(self, collapsed);
}

- (jboolean)isSubmitAreaEnabled {
  return ADXSearchView_isSubmitAreaEnabled(self);
}

- (void)updateSubmitButtonWithBoolean:(jboolean)hasText {
  ADXSearchView_updateSubmitButtonWithBoolean_(self, hasText);
}

- (void)updateSubmitArea {
  ADXSearchView_updateSubmitArea(self);
}

- (void)updateQueryHint {
  ADXSearchView_updateQueryHint(self);
}

- (void)updateVoiceButtonWithBoolean:(jboolean)empty {
  ADXSearchView_updateVoiceButtonWithBoolean_(self, empty);
}

- (void)onTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)newText {
  NSString *text = JreRetainedLocalValue([((ADAutoCompleteTextView *) nil_chk(mSearchSrcTextView_)) getText]);
  JreStrongAssign(&mUserQuery_, text);
  jboolean hasText = !ADTextUtils_isEmptyWithNSString_(text);
  ADXSearchView_updateSubmitButtonWithBoolean_(self, hasText);
  ADXSearchView_updateVoiceButtonWithBoolean_(self, !hasText);
  ADXSearchView_updateCloseButton(self);
  ADXSearchView_updateSubmitArea(self);
  if (mOnQueryChangeListener_ != nil && !ADTextUtils_equalsWithJavaLangCharSequence_withJavaLangCharSequence_(newText, mOldQueryText_)) {
    [mOnQueryChangeListener_ onQueryTextChangeWithNSString:[((id<JavaLangCharSequence>) nil_chk(newText)) description]];
  }
  JreStrongAssign(&mOldQueryText_, [((id<JavaLangCharSequence>) nil_chk(newText)) description]);
}

- (void)onSubmitQuery {
  id<JavaLangCharSequence> query = JreRetainedLocalValue([((ADAutoCompleteTextView *) nil_chk(mSearchSrcTextView_)) getText]);
  if (query != nil && ADTextUtils_getTrimmedLengthWithJavaLangCharSequence_(query) > 0) {
    if (mOnQueryChangeListener_ == nil || ![mOnQueryChangeListener_ onQueryTextSubmitWithNSString:[query description]]) {
      if (mSearchable_ != nil) {
        [self launchQuerySearchWithInt:ADKeyEvent_KEYCODE_UNKNOWN withNSString:nil withNSString:[query description]];
      }
      ADXSearchView_dismissSuggestions(self);
    }
  }
}

- (void)dismissSuggestions {
  ADXSearchView_dismissSuggestions(self);
}

- (void)onCloseClicked {
  NSString *text = JreRetainedLocalValue([((ADAutoCompleteTextView *) nil_chk(mSearchSrcTextView_)) getText]);
  if (ADTextUtils_isEmptyWithNSString_(text)) {
    if (mIconifiedByDefault_) {
      if (mOnCloseListener_ == nil || ![mOnCloseListener_ onClose]) {
        [self clearFocus];
        ADXSearchView_updateViewsVisibilityWithBoolean_(self, true);
      }
    }
  }
  else {
    [((ADAutoCompleteTextView *) nil_chk(mSearchSrcTextView_)) setMyAttributeWithNSString:@"text" withId:@""];
    [((ADAutoCompleteTextView *) nil_chk(mSearchSrcTextView_)) requestFocus];
  }
}

- (void)onSearchClicked {
  ADXSearchView_updateViewsVisibilityWithBoolean_(self, false);
  [((ADAutoCompleteTextView *) nil_chk(mSearchSrcTextView_)) requestFocus];
  if (mOnSearchClickListener_ != nil) {
    [mOnSearchClickListener_ onClickWithADView:self];
  }
}

- (void)onActionViewCollapsed {
  [self setQueryWithJavaLangCharSequence:@"" withBoolean:false];
  [self clearFocus];
  ADXSearchView_updateViewsVisibilityWithBoolean_(self, true);
  mExpandedInActionView_ = false;
}

- (void)onActionViewExpanded {
  if (mExpandedInActionView_) return;
  mExpandedInActionView_ = true;
  [((ADAutoCompleteTextView *) nil_chk(mSearchSrcTextView_)) setMyAttributeWithNSString:@"text" withId:@""];
  [self setIconifiedWithBoolean:false];
}

- (void)setQueryWithJavaLangCharSequence:(id<JavaLangCharSequence>)query {
  ADXSearchView_setQueryWithJavaLangCharSequence_(self, query);
}

- (void)launchQuerySearchWithInt:(jint)actionKey
                    withNSString:(NSString *)actionMsg
                    withNSString:(NSString *)query {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXSearchView_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithASIWidget:(id<ASIWidget>)root {
  mSubmitButtonEnabled_ = true;
  JreStrongAssign(&mSearchSrcTextView_, (ADAutoCompleteTextView *) cast_chk([((id<ASIWidget>) nil_chk([((id<ASIWidget>) nil_chk(root)) findWidgetByIdWithNSString:@"@+id/search_src_text"])) asWidget], [ADAutoCompleteTextView class]));
  JreStrongAssign(&mSearchEditFrame_, (ADView *) cast_chk([((id<ASIWidget>) nil_chk([root findWidgetByIdWithNSString:@"@+id/search_edit_frame"])) asWidget], [ADView class]));
  JreStrongAssign(&mSubmitArea_, (ADView *) cast_chk([((id<ASIWidget>) nil_chk([root findWidgetByIdWithNSString:@"@+id/submit_area"])) asWidget], [ADView class]));
  JreStrongAssign(&mSearchButton_, (ADImageView *) cast_chk([((id<ASIWidget>) nil_chk([root findWidgetByIdWithNSString:@"@+id/search_button"])) asWidget], [ADImageView class]));
  JreStrongAssign(&mGoButton_, (ADImageView *) cast_chk([((id<ASIWidget>) nil_chk([root findWidgetByIdWithNSString:@"@+id/search_go_btn"])) asWidget], [ADImageView class]));
  JreStrongAssign(&mCloseButton_, (ADImageView *) cast_chk([((id<ASIWidget>) nil_chk([root findWidgetByIdWithNSString:@"@+id/search_close_btn"])) asWidget], [ADImageView class]));
  JreStrongAssign(&mVoiceButton_, (ADImageView *) cast_chk([((id<ASIWidget>) nil_chk([root findWidgetByIdWithNSString:@"@+id/search_voice_btn"])) asWidget], [ADImageView class]));
  JreStrongAssign(&mCollapsedIcon_, (ADImageView *) cast_chk([((id<ASIWidget>) nil_chk([root findWidgetByIdWithNSString:@"@+id/search_mag_icon"])) asWidget], [ADImageView class]));
  JreStrongAssign(&self->mSearchHintIcon_, nil);
  self->mSuggestionRowLayout_ = 10;
  self->mSuggestionCommitIconResId_ = 0;
  JreStrongAssign(&self->mDefaultQueryHint_, @"");
  mIconifiedByDefault_ = true;
  ADXSearchView_updateViewsVisibilityWithBoolean_(self, mIconifiedByDefault_);
  [((ADImageView *) nil_chk(mSearchButton_)) setMyAttributeWithNSString:@"onClick" withId:create_ADXSearchView_1_initWithADXSearchView_(self)];
  [((ADImageView *) nil_chk(mGoButton_)) setMyAttributeWithNSString:@"onClick" withId:create_ADXSearchView_2_initWithADXSearchView_(self)];
  [((ADImageView *) nil_chk(mCloseButton_)) setMyAttributeWithNSString:@"onClick" withId:create_ADXSearchView_3_initWithADXSearchView_(self)];
  [((ADAutoCompleteTextView *) nil_chk(mSearchSrcTextView_)) setMyAttributeWithNSString:@"onTextChange" withId:create_ADXSearchView_4_initWithADXSearchView_(self)];
}

- (jboolean)hasFocus {
  return true;
}

- (id<JavaLangCharSequence>)getDecoratedHintWithJavaLangCharSequence:(id<JavaLangCharSequence>)hintText {
  return hintText;
}

- (jint)getPreferredWidth {
  return JreFpToInt((ASPluginInvoker_getDisplayMetricDensity() * ASPluginInvoker_getScreenWidthDp()));
}

- (jint)getPreferredHeight {
  return JreFpToInt((ASPluginInvoker_getDisplayMetricDensity() * 60.0f));
}

- (void)updateCloseButton {
  ADXSearchView_updateCloseButton(self);
}

- (void)dealloc {
  RELEASE_(mSearchSrcTextView_);
  RELEASE_(mSearchEditFrame_);
  RELEASE_(mSubmitArea_);
  RELEASE_(mSearchButton_);
  RELEASE_(mGoButton_);
  RELEASE_(mCloseButton_);
  RELEASE_(mVoiceButton_);
  RELEASE_(mCollapsedIcon_);
  RELEASE_(mSearchHintIcon_);
  RELEASE_(mDefaultQueryHint_);
  RELEASE_(mOnQueryChangeListener_);
  RELEASE_(mOnCloseListener_);
  RELEASE_(mOnSearchClickListener_);
  RELEASE_(mQueryHint_);
  RELEASE_(mOldQueryText_);
  RELEASE_(mUserQuery_);
  RELEASE_(mSearchable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 13, 14, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x0, 17, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setOnQueryTextListenerWithADXSearchView_OnQueryTextListener:);
  methods[1].selector = @selector(setQueryWithJavaLangCharSequence:withBoolean:);
  methods[2].selector = @selector(getQueryHint);
  methods[3].selector = @selector(setIconifiedWithBoolean:);
  methods[4].selector = @selector(isIconified);
  methods[5].selector = @selector(onMeasureWithInt:withInt:);
  methods[6].selector = @selector(updateViewsVisibilityWithBoolean:);
  methods[7].selector = @selector(isSubmitAreaEnabled);
  methods[8].selector = @selector(updateSubmitButtonWithBoolean:);
  methods[9].selector = @selector(updateSubmitArea);
  methods[10].selector = @selector(updateQueryHint);
  methods[11].selector = @selector(updateVoiceButtonWithBoolean:);
  methods[12].selector = @selector(onTextChangedWithJavaLangCharSequence:);
  methods[13].selector = @selector(onSubmitQuery);
  methods[14].selector = @selector(dismissSuggestions);
  methods[15].selector = @selector(onCloseClicked);
  methods[16].selector = @selector(onSearchClicked);
  methods[17].selector = @selector(onActionViewCollapsed);
  methods[18].selector = @selector(onActionViewExpanded);
  methods[19].selector = @selector(setQueryWithJavaLangCharSequence:);
  methods[20].selector = @selector(launchQuerySearchWithInt:withNSString:withNSString:);
  methods[21].selector = @selector(init);
  methods[22].selector = @selector(init__WithASIWidget:);
  methods[23].selector = @selector(hasFocus);
  methods[24].selector = @selector(getDecoratedHintWithJavaLangCharSequence:);
  methods[25].selector = @selector(getPreferredWidth);
  methods[26].selector = @selector(getPreferredHeight);
  methods[27].selector = @selector(updateCloseButton);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DBG", "Z", .constantValue.asBOOL = ADXSearchView_DBG, 0x18, -1, -1, -1, -1 },
    { "mSearchSrcTextView_", "LADAutoCompleteTextView;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mSearchEditFrame_", "LADView;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mSubmitArea_", "LADView;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mSearchButton_", "LADImageView;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mGoButton_", "LADImageView;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mCloseButton_", "LADImageView;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mVoiceButton_", "LADImageView;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mCollapsedIcon_", "LADImageView;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mSearchHintIcon_", "LADDrawable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mSuggestionRowLayout_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mSuggestionCommitIconResId_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mDefaultQueryHint_", "LJavaLangCharSequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mOnQueryChangeListener_", "LADXSearchView_OnQueryTextListener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mOnCloseListener_", "LADXSearchView_OnCloseListener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mOnSearchClickListener_", "LADView_OnClickListener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mIconifiedByDefault_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mIconified_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mSubmitButtonEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mQueryHint_", "LJavaLangCharSequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mQueryRefinement_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mClearingFocus_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mMaxWidth_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mVoiceButtonEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mOldQueryText_", "LJavaLangCharSequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mUserQuery_", "LJavaLangCharSequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mExpandedInActionView_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mCollapsedImeOptions_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mSearchable_", "LADXSearchView_SearchableInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setOnQueryTextListener", "LADXSearchView_OnQueryTextListener;", "setQuery", "LJavaLangCharSequence;Z", "setIconified", "Z", "onMeasure", "II", "updateViewsVisibility", "updateSubmitButton", "updateVoiceButton", "onTextChanged", "LJavaLangCharSequence;", "launchQuerySearch", "ILNSString;LNSString;", "init", "LASIWidget;", "getDecoratedHint", "LADXSearchView_OnQueryTextListener;LADXSearchView_OnCloseListener;LADXSearchView_SearchableInfo;" };
  static const J2ObjcClassInfo _ADXSearchView = { "SearchView", "androidx.appcompat.widget", ptrTable, methods, fields, 7, 0x1, 28, 29, -1, 18, -1, -1, -1 };
  return &_ADXSearchView;
}

@end

void ADXSearchView_updateViewsVisibilityWithBoolean_(ADXSearchView *self, jboolean collapsed) {
  self->mIconified_ = collapsed;
  jint visCollapsed = collapsed ? ADView_VISIBLE : ADView_GONE;
  jboolean hasText = !ADTextUtils_isEmptyWithNSString_([((ADAutoCompleteTextView *) nil_chk(self->mSearchSrcTextView_)) getText]);
  [((ADImageView *) nil_chk(self->mSearchButton_)) setVisibilityWithInt:visCollapsed];
  ADXSearchView_updateSubmitButtonWithBoolean_(self, hasText);
  [((ADView *) nil_chk(self->mSearchEditFrame_)) setVisibilityWithInt:collapsed ? ADView_GONE : ADView_VISIBLE];
  jint iconVisibility;
  if (self->mCollapsedIcon_ == nil || self->mIconifiedByDefault_) {
    iconVisibility = ADView_GONE;
  }
  else {
    iconVisibility = ADView_VISIBLE;
  }
  [((ADImageView *) nil_chk(self->mCollapsedIcon_)) setVisibilityWithInt:iconVisibility];
  ADXSearchView_updateCloseButton(self);
  ADXSearchView_updateVoiceButtonWithBoolean_(self, !hasText);
  ADXSearchView_updateSubmitArea(self);
}

jboolean ADXSearchView_isSubmitAreaEnabled(ADXSearchView *self) {
  return (self->mSubmitButtonEnabled_ || self->mVoiceButtonEnabled_) && ![self isIconified];
}

void ADXSearchView_updateSubmitButtonWithBoolean_(ADXSearchView *self, jboolean hasText) {
  jint visibility = ADView_GONE;
  if (self->mSubmitButtonEnabled_ && ADXSearchView_isSubmitAreaEnabled(self) && [self hasFocus] && (hasText || !self->mVoiceButtonEnabled_)) {
    visibility = ADView_VISIBLE;
  }
  [((ADImageView *) nil_chk(self->mGoButton_)) setVisibilityWithInt:visibility];
}

void ADXSearchView_updateSubmitArea(ADXSearchView *self) {
  jint visibility = ADView_GONE;
  if (ADXSearchView_isSubmitAreaEnabled(self) && ([((ADImageView *) nil_chk(self->mGoButton_)) getVisibility] == ADView_VISIBLE || [((ADImageView *) nil_chk(self->mVoiceButton_)) getVisibility] == ADView_VISIBLE)) {
    visibility = ADView_VISIBLE;
  }
  [((ADView *) nil_chk(self->mSubmitArea_)) setVisibilityWithInt:visibility];
}

void ADXSearchView_updateQueryHint(ADXSearchView *self) {
  id<JavaLangCharSequence> hint = [self getQueryHint];
}

void ADXSearchView_updateVoiceButtonWithBoolean_(ADXSearchView *self, jboolean empty) {
  jint visibility = ADView_GONE;
  if (self->mVoiceButtonEnabled_ && ![self isIconified] && empty) {
    visibility = ADView_VISIBLE;
    [((ADImageView *) nil_chk(self->mGoButton_)) setVisibilityWithInt:ADView_GONE];
  }
  [((ADImageView *) nil_chk(self->mVoiceButton_)) setVisibilityWithInt:visibility];
}

void ADXSearchView_dismissSuggestions(ADXSearchView *self) {
  [((ADAutoCompleteTextView *) nil_chk(self->mSearchSrcTextView_)) dismissDropDown];
}

void ADXSearchView_setQueryWithJavaLangCharSequence_(ADXSearchView *self, id<JavaLangCharSequence> query) {
  [((ADAutoCompleteTextView *) nil_chk(self->mSearchSrcTextView_)) setMyAttributeWithNSString:@"text" withId:query];
}

void ADXSearchView_init(ADXSearchView *self) {
  ADXLinearLayoutCompat_init(self);
}

ADXSearchView *new_ADXSearchView_init() {
  J2OBJC_NEW_IMPL(ADXSearchView, init)
}

ADXSearchView *create_ADXSearchView_init() {
  J2OBJC_CREATE_IMPL(ADXSearchView, init)
}

void ADXSearchView_updateCloseButton(ADXSearchView *self) {
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXSearchView)

@implementation ADXSearchView_OnQueryTextListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onQueryTextSubmitWithNSString:);
  methods[1].selector = @selector(onQueryTextChangeWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onQueryTextSubmit", "LNSString;", "onQueryTextChange", "LADXSearchView;" };
  static const J2ObjcClassInfo _ADXSearchView_OnQueryTextListener = { "OnQueryTextListener", "androidx.appcompat.widget", ptrTable, methods, NULL, 7, 0x609, 2, 0, 3, -1, -1, -1, -1 };
  return &_ADXSearchView_OnQueryTextListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXSearchView_OnQueryTextListener)

@implementation ADXSearchView_OnCloseListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onClose);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADXSearchView;" };
  static const J2ObjcClassInfo _ADXSearchView_OnCloseListener = { "OnCloseListener", "androidx.appcompat.widget", ptrTable, methods, NULL, 7, 0x609, 1, 0, 0, -1, -1, -1, -1 };
  return &_ADXSearchView_OnCloseListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXSearchView_OnCloseListener)

@implementation ADXSearchView_SearchableInfo

- (instancetype)initWithADXSearchView:(ADXSearchView *)outer$ {
  ADXSearchView_SearchableInfo_initWithADXSearchView_(self, outer$);
  return self;
}

- (jint)getHintId {
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXSearchView:);
  methods[1].selector = @selector(getHintId);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADXSearchView;" };
  static const J2ObjcClassInfo _ADXSearchView_SearchableInfo = { "SearchableInfo", "androidx.appcompat.widget", ptrTable, methods, NULL, 7, 0x0, 2, 0, 0, -1, -1, -1, -1 };
  return &_ADXSearchView_SearchableInfo;
}

@end

void ADXSearchView_SearchableInfo_initWithADXSearchView_(ADXSearchView_SearchableInfo *self, ADXSearchView *outer$) {
  NSObject_init(self);
}

ADXSearchView_SearchableInfo *new_ADXSearchView_SearchableInfo_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_NEW_IMPL(ADXSearchView_SearchableInfo, initWithADXSearchView_, outer$)
}

ADXSearchView_SearchableInfo *create_ADXSearchView_SearchableInfo_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_CREATE_IMPL(ADXSearchView_SearchableInfo, initWithADXSearchView_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXSearchView_SearchableInfo)

@implementation ADXSearchView_1

- (instancetype)initWithADXSearchView:(ADXSearchView *)outer$ {
  ADXSearchView_1_initWithADXSearchView_(self, outer$);
  return self;
}

- (void)onClickWithADView:(ADView *)v {
  this$0_->mIconifiedByDefault_ = false;
  [this$0_ onSearchClicked];
  [this$0_ requestLayout];
  [this$0_ remeasure];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXSearchView:);
  methods[1].selector = @selector(onClickWithADView:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXSearchView;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXSearchView;", "onClick", "LADView;", "init__WithASIWidget:" };
  static const J2ObjcClassInfo _ADXSearchView_1 = { "", "androidx.appcompat.widget", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, 3, -1, -1 };
  return &_ADXSearchView_1;
}

@end

void ADXSearchView_1_initWithADXSearchView_(ADXSearchView_1 *self, ADXSearchView *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXSearchView_1 *new_ADXSearchView_1_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_NEW_IMPL(ADXSearchView_1, initWithADXSearchView_, outer$)
}

ADXSearchView_1 *create_ADXSearchView_1_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_CREATE_IMPL(ADXSearchView_1, initWithADXSearchView_, outer$)
}

@implementation ADXSearchView_2

- (instancetype)initWithADXSearchView:(ADXSearchView *)outer$ {
  ADXSearchView_2_initWithADXSearchView_(self, outer$);
  return self;
}

- (void)onClickWithADView:(ADView *)v {
  [this$0_ onSubmitQuery];
  [this$0_ requestLayout];
  [this$0_ remeasure];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXSearchView:);
  methods[1].selector = @selector(onClickWithADView:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXSearchView;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXSearchView;", "onClick", "LADView;", "init__WithASIWidget:" };
  static const J2ObjcClassInfo _ADXSearchView_2 = { "", "androidx.appcompat.widget", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, 3, -1, -1 };
  return &_ADXSearchView_2;
}

@end

void ADXSearchView_2_initWithADXSearchView_(ADXSearchView_2 *self, ADXSearchView *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXSearchView_2 *new_ADXSearchView_2_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_NEW_IMPL(ADXSearchView_2, initWithADXSearchView_, outer$)
}

ADXSearchView_2 *create_ADXSearchView_2_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_CREATE_IMPL(ADXSearchView_2, initWithADXSearchView_, outer$)
}

@implementation ADXSearchView_3

- (instancetype)initWithADXSearchView:(ADXSearchView *)outer$ {
  ADXSearchView_3_initWithADXSearchView_(self, outer$);
  return self;
}

- (void)onClickWithADView:(ADView *)v {
  this$0_->mIconifiedByDefault_ = true;
  [this$0_ onCloseClicked];
  [this$0_ requestLayout];
  [this$0_ remeasure];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXSearchView:);
  methods[1].selector = @selector(onClickWithADView:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXSearchView;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXSearchView;", "onClick", "LADView;", "init__WithASIWidget:" };
  static const J2ObjcClassInfo _ADXSearchView_3 = { "", "androidx.appcompat.widget", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, 3, -1, -1 };
  return &_ADXSearchView_3;
}

@end

void ADXSearchView_3_initWithADXSearchView_(ADXSearchView_3 *self, ADXSearchView *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXSearchView_3 *new_ADXSearchView_3_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_NEW_IMPL(ADXSearchView_3, initWithADXSearchView_, outer$)
}

ADXSearchView_3 *create_ADXSearchView_3_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_CREATE_IMPL(ADXSearchView_3, initWithADXSearchView_, outer$)
}

@implementation ADXSearchView_4

- (instancetype)initWithADXSearchView:(ADXSearchView *)outer$ {
  ADXSearchView_4_initWithADXSearchView_(self, outer$);
  return self;
}

- (void)beforeTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                          withInt:(jint)start
                                          withInt:(jint)count
                                          withInt:(jint)after {
}

- (void)onTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                      withInt:(jint)start
                                      withInt:(jint)before
                                      withInt:(jint)count {
  [this$0_ onTextChangedWithJavaLangCharSequence:s];
  [this$0_ requestLayout];
  [this$0_ remeasure];
}

- (void)afterTextChangedWithADEditable:(id<ADEditable>)s {
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXSearchView:);
  methods[1].selector = @selector(beforeTextChangedWithJavaLangCharSequence:withInt:withInt:withInt:);
  methods[2].selector = @selector(onTextChangedWithJavaLangCharSequence:withInt:withInt:withInt:);
  methods[3].selector = @selector(afterTextChangedWithADEditable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXSearchView;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXSearchView;", "beforeTextChanged", "LJavaLangCharSequence;III", "onTextChanged", "afterTextChanged", "LADEditable;", "init__WithASIWidget:" };
  static const J2ObjcClassInfo _ADXSearchView_4 = { "", "androidx.appcompat.widget", ptrTable, methods, fields, 7, 0x8010, 4, 1, 0, -1, 6, -1, -1 };
  return &_ADXSearchView_4;
}

@end

void ADXSearchView_4_initWithADXSearchView_(ADXSearchView_4 *self, ADXSearchView *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXSearchView_4 *new_ADXSearchView_4_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_NEW_IMPL(ADXSearchView_4, initWithADXSearchView_, outer$)
}

ADXSearchView_4 *create_ADXSearchView_4_initWithADXSearchView_(ADXSearchView *outer$) {
  J2OBJC_CREATE_IMPL(ADXSearchView_4, initWithADXSearchView_, outer$)
}
